[pause_resume]
recover_velocity: 50.

[display_status]

[gcode_macro PARK_EXTRUDER_AND_BED]
description: Move extruder to back left and bed to front
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}

  # Begin Macro
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
  RESTORE_GCODE_STATE

[gcode_macro RETRACT_EXTRUDER]
# Call macro RETURN=false for first run and RETURN=true for second run
description: Retract the extruder
# change this if you need more or less extrusion (Retraction)
# Always use positive value
variable_extrude: 5.0
variable_extrude_speed: 4500
gcode:
  ##### read variables set in macro #####
  {% set E = printer["gcode_macro RETRACT_EXTRUDER"].extrude|float %}
  {% set E_speed = printer["gcode_macro RETRACT_EXTRUDER"].extrude_speed|float %}
  # set extrude to negative if not returning
  {% if params.RETURN|lower == 'false' %}
    {% set E = -E %}
  {% endif %}
  ####
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E{E} F{E_speed}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESTORE_GCODE_STATE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# do not change this, automatically defined by the macro
variable_extruder_temp: 0
gcode:
  SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=extruder_temp VALUE={printer.extruder.target|float}
  PAUSE_BASE
  RETRACT_EXTRUDER RETURN=false
  PARK_EXTRUDER_AND_BED

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read variables from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  {% set E_speed = printer["gcode_macro PAUSE"].extrude_speed|float %}
  {% set E_temp = printer["gcode_macro PAUSE"].extruder_temp|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  M109 0 S{E_temp}
  RETRACT_EXTRUDER RETURN=true
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro G29]
gcode:
 BED_MESH_CLEAR
 G28
 BED_MESH_CALIBRATE
 BED_MESH_PROFILE SAVE=x1

#[gcode_macro G34]
#gcode:
#     G28
#     Z_TILT_ADJUST

[gcode_macro G35]
gcode:
     G28
     SCREWS_TILT_CALCULATE

[gcode_macro START_PRINT]
# Reference https://github.com/KevinOConnor/klipper/blob/master/docs/Config_Reference.md#gcode_macroA
# On how to override default parameters

gcode:
    {% set E = params.BED_TEMP|default(60) %}
    {% set E = params.EXTRUDER_TEMP|default(200) %}
    # Home the printer
    G28
    # Use absolute coordinates
    G90
    # Move the nozzle near the bed
    G1 X0 Y0 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z0.15 F300
    G92 E0 ;Reset Extruder
    G1 X20 Y5 Z0.3 F5000.0
    G1 Z0.3 F1000
    G1 X200 Y5 F1500.0 E15
    G1 X200 Y5.3 Z0.3 F5000.0
    G1 X5.3  Y5.3 Z0.3 F1500.0 E30
    G1 Z3 F3000
    G21 ; set units to millimeters
    G90 ; use absolute coordinates
    M83 ; use relative distances for extrusion
    G92 E0

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z30 F3000
    G90
    # Disable steppers
    M84
